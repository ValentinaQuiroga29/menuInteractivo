@startuml Sistema_Menu_Interactivo_Clases

!theme plain
skinparam backgroundColor #FFFFFF
skinparam classBackgroundColor #F8F9FA
skinparam classBorderColor #2E3B55
skinparam classFontColor #2E3B55
skinparam classFontSize 12
skinparam classAttributeFontSize 10
skinparam classMethodFontSize 10

title Sistema de Menú Interactivo - Diagrama de Clases

' ==========================================
' CLASE USUARIO
' ==========================================
class Usuario {
    -id_usuario: int
    -nombre: string
    -correo: string
    -contraseña: string
    -rol: enum
    -fecha_creacion: datetime
    --
    +autenticar(correo: string, contraseña: string): boolean
    +cambiar_rol(nuevo_rol: string): void
    +obtener_perfil(): Usuario
    +actualizar_datos(nombre: string, correo: string): void
}

' ==========================================
' CLASE PLATILLO
' ==========================================
class Platillo {
    -id_platillo: int
    -nombre: string
    -descripcion: text
    -precio: decimal
    -imagen: string
    -estado: enum
    -id_categoria: int
    -fecha_creacion: datetime
    --
    +cambiar_estado(nuevo_estado: string): void
    +actualizar_precio(nuevo_precio: decimal): void
    +obtener_por_categoria(id_categoria: int): List<Platillo>
    +obtener_disponibles(): List<Platillo>
    +subir_imagen(archivo: File): string
}

' ==========================================
' CLASE CATEGORIA
' ==========================================
class Categoria {
    -id_categoria: int
    -nombre: string
    -descripcion: text
    -imagen: string
    -activa: boolean
    --
    +obtener_platillos(): List<Platillo>
    +activar(): void
    +desactivar(): void
    +actualizar_nombre(nuevo_nombre: string): void
}

' ==========================================
' CLASE PEDIDO
' ==========================================
class Pedido {
    -id_pedido: int
    -id_cliente: int
    -id_mesero: int
    -estado: enum
    -fecha_hora: datetime
    -total: decimal
    -metodo_pago: string
    --
    +cambiar_estado(nuevo_estado: string): void
    +calcular_total(): decimal
    +registrar_pago(metodo: string): void
    +obtener_detalles(): List<DetallePedido>
    +asignar_mesero(id_mesero: int): void
}

' ==========================================
' CLASE DETALLE_PEDIDO
' ==========================================
class DetallePedido {
    -id_detalle: int
    -id_pedido: int
    -id_platillo: int
    -cantidad: int
    -precio_unitario: decimal
    -subtotal: decimal
    -notas: text
    --
    +calcular_subtotal(): decimal
    +actualizar_cantidad(nueva_cantidad: int): void
    +agregar_notas(notas: string): void
    +obtener_platillo(): Platillo
}

' ==========================================
' CLASE NOTIFICACION
' ==========================================
class Notificacion {
    -id_notificacion: int
    -id_usuario: int
    -tipo: enum
    -mensaje: string
    -leida: boolean
    -fecha_creacion: datetime
    --
    +marcar_como_leida(): void
    +enviar_notificacion(): void
    +obtener_no_leidas(): List<Notificacion>
    +eliminar_antiguas(): void
}

' ==========================================
' CLASE CARRITO (CONTEXT REACT)
' ==========================================
class CarritoContext {
    -carrito: List<ItemCarrito>
    -total: decimal
    --
    +agregar_platillo(platillo: Platillo): void
    +quitar_platillo(id_platillo: int): void
    +actualizar_cantidad(id_platillo: int, cantidad: int): void
    +calcular_total(): decimal
    +vaciar_carrito(): void
    +confirmar_pedido(): Pedido
}

' ==========================================
' CLASE ITEM_CARRITO
' ==========================================
class ItemCarrito {
    -id_platillo: int
    -nombre: string
    -precio: decimal
    -cantidad: int
    -subtotal: decimal
    --
    +calcular_subtotal(): decimal
    +incrementar_cantidad(): void
    +decrementar_cantidad(): void
}

' ==========================================
' ENUMERACIONES
' ==========================================
enum EstadoPedido {
    PENDIENTE
    PAGADO
    EN_PREPARACION
    LISTO
    ENTREGADO
    CANCELADO
}

enum RolUsuario {
    CLIENTE
    MESERO
    COCINERO
    ADMINISTRADOR
}

enum EstadoPlatillo {
    DISPONIBLE
    NO_DISPONIBLE
}

enum TipoNotificacion {
    PEDIDO_NUEVO
    PEDIDO_LISTO
    PEDIDO_ENTREGADO
    SISTEMA
}

' ==========================================
' RELACIONES
' ==========================================

' Usuario - Pedido (1:N)
Usuario ||--o{ Pedido : "realiza"
Usuario ||--o{ Pedido : "gestiona"

' Usuario - Notificacion (1:N)
Usuario ||--o{ Notificacion : "recibe"

' Categoria - Platillo (1:N)
Categoria ||--o{ Platillo : "contiene"

' Pedido - DetallePedido (1:N)
Pedido ||--o{ DetallePedido : "incluye"

' Platillo - DetallePedido (1:N)
Platillo ||--o{ DetallePedido : "se_ordena_en"

' CarritoContext - ItemCarrito (1:N)
CarritoContext ||--o{ ItemCarrito : "contiene"

' Platillo - ItemCarrito (1:N)
Platillo ||--o{ ItemCarrito : "se_agrega_a"

' Relaciones con enumeraciones
Pedido }o--|| EstadoPedido : "tiene"
Usuario }o--|| RolUsuario : "tiene"
Platillo }o--|| EstadoPlatillo : "tiene"
Notificacion }o--|| TipoNotificacion : "tiene"

' ==========================================
' NOTAS EXPLICATIVAS
' ==========================================
note top of Usuario
  Gestiona la autenticación
  y autorización de usuarios
  con diferentes roles
end note

note top of Platillo
  Representa los productos
  del menú con información
  completa y estado
end note

note top of Pedido
  Maneja el flujo completo
  de pedidos desde creación
  hasta entrega
end note

note top of CarritoContext
  Context de React para
  manejo global del carrito
  de compras
end note

note top of Categoria
  Organiza los platillos
  en grupos lógicos
  para facilitar navegación
end note

note top of DetallePedido
  Almacena los items
  específicos de cada pedido
  con cantidades y precios
end note

note top of Notificacion
  Sistema de alertas
  para comunicación
  entre roles del sistema
end note

@enduml 